generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id           String    @id @unique
  username     String
  role         String
  auth_session Session[]
  key          Key[]
  cart         Cart?
  Adress       Adress?
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Product {
  id          String   @id @default(cuid())
  slug        String   @unique
  name        String
  description String
  image       String
  price       Int
  stock       Int
  active      Boolean  @default(false)
  created_at  DateTime @default(now())
  category_id String
  brand_id    String
  cart_id     String?
  category    Category @relation(references: [id], fields: [category_id])
  brand       Brand    @relation(references: [id], fields: [brand_id])
  cart        Cart?    @relation(references: [id], fields: [cart_id])
}

model Category {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

model Brand {
  id       String    @id @default(cuid())
  name     String    @unique
  products Product[]
}

model Cart {
  id       String    @id @default(cuid())
  products Product[]
  user_id  String    @unique
  user     User      @relation(references: [id], fields: [user_id], onDelete: Cascade)
}

model Adress {
  id         String  @id @default(cuid())
  first_name String
  last_name  String
  adress     String
  email      String
  phone      Int
  info       String?
  user_id    String  @unique
  user       User    @relation(references: [id], fields: [user_id], onDelete: Cascade)
}
